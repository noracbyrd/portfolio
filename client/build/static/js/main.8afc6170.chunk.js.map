{"version":3,"sources":["components/Navbar/index.js","components/About/index.js","utils/API.js","components/PortfolioCard/index.js","components/Portfolio/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","Component","About","id","rel","href","target","src","alt","console","log","axios","get","PortfolioCard","props","class","image","title","text","link","Portfolio","state","projects","API","then","res","data","setState","catch","err","this","map","project","data-aos","data-aos-duration","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2UAeeA,G,uLATP,OACI,6BACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,cAAf,0C,GALCC,cCmCNC,G,uLAlCP,OAEI,yBAAKF,UAAU,aACX,6BACA,6BACA,yBAAKG,GAAG,SACJ,yBAAKH,UAAU,OACf,yBAAKA,UAAU,oBAAmB,0BAAMA,UAAU,aAAY,uBAAGI,IAAI,sBAAsBC,KAAK,+BAA+BC,OAAO,UAAxE,UAA5B,MAA0H,uBAAGF,IAAI,sBAAsBC,KAAK,kDAAkDC,OAAO,UAA3F,gBAGhK,yBAAKN,UAAU,OACX,yBAAKA,UAAU,SAASG,GAAG,gBACvB,yBAAKA,GAAG,aAAaI,IAAI,gDAAgDC,IAAI,uBAEjF,yBAAKR,UAAU,SAASG,GAAG,OACvB,ycAMA,6BACA,2MAGR,6BACA,kC,GA5BIF,c,gBCDL,EAEC,WAER,OADAQ,QAAQC,IAAI,wBACLC,IAAMC,IAAI,mB,MCsBVC,MAzBf,SAAwBC,GACpB,OACI,yBAAKC,MAAM,aACX,yBAAKA,MAAM,OACf,yBAAKA,MAAM,cACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,cACT,yBAAKR,IAAKO,EAAME,MAAOR,IAAKM,EAAMN,KAClC,0BAAMO,MAAM,cAAcD,EAAMG,SAGlC,yBAAKF,MAAM,gBACT,2BAAID,EAAMI,OAEZ,yBAAKH,MAAM,eACT,uBAAGV,KAAMS,EAAMK,MAAf,sBCyBKC,E,2MAtCXC,MAAQ,CACJC,SAAU,I,mFAEO,IAAD,OAEhBb,QAAQC,IAAI,oBACZa,IACKC,MAAK,SAAAC,GACFhB,QAAQC,IAAI,QACZD,QAAQC,IAAIe,EAAIC,MAChB,EAAKC,SAAS,CACVL,SAAUG,EAAIC,UAGrBE,OAAM,SAAAC,GAAG,OAAIpB,QAAQC,IAAImB,Q,+BAG9B,OACI,6BACI,wCAECC,KAAKT,MAAMC,SAASS,KAAI,SAAAC,GAAO,OAC5B,yBAAKC,WAAS,aAAaC,oBAAkB,QACzC,6BACI,kBAAC,EAAD,CAAejB,MAAOe,EAAQf,MAC1BC,KAAMc,EAAQd,KACdC,KAAMa,EAAQb,KACdH,MAAOgB,EAAQhB,MACfR,IAAKwB,EAAQxB,gB,GA7BrBP,aCcTkC,MAZf,WACE,OACE,yBAAKnC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACf,kBAAC,EAAD,SCAcoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,MAAK,SAAAwB,GACjCA,EAAaC,kB","file":"static/js/main.8afc6170.chunk.js","sourcesContent":["// Children: Score Message and Score Counter\r\nimport React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"brand-logo\">Nora Byrd ~ Full Stack Developer</div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;\r\n","import React, { Component } from \"react\"\r\nimport \"./style.css\"\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <br></br>\r\n                <br></br>\r\n                <div id=\"links\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col s6 offset-s3\"><span className=\"flow-text\"><a rel=\"noopener noreferrer\" href=\"https://github.com/noracbyrd\" target=\"_blank\">Github</a> | <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/nora-byrd-11906a51/\" target=\"_blank\">LinkedIn</a></span></div>\r\n                    </div>         \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s3\" id=\"profileImage\">\r\n                        <img id=\"pictureBox\" src=\"http://ryanabney.com/nora/nora_fun_square.jpg\" alt=\"Nora with a tiara\"></img>\r\n                    </div>\r\n                    <div className=\"col s9\" id=\"bio\">\r\n                        <p>Nora is a full stack developer with a particular interest in backend. She graduated from the University of Pennsylvania with a degree in\r\n                            Classics (Greek and Latin) but eventually decided to spend more time in the twenty-first\r\n                            century.\r\n                            She worked in digital marketing for six and a half years and learned a lot about client services\r\n                            and\r\n                    marketing technology in the process. She is very excited to begin her programming journey!</p>\r\n                        <br></br>\r\n                        <p>In her spare time, Nora loves to sing, whether at traditional Irish sessions, voice lessons, or volunteering with Sharing Notes. She also has a bit of a comic book habit.</p>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import axios from \"axios\";\r\n\r\nexport default {\r\n    // routes for projects\r\n    getProject: function(){\r\n        console.log(\"the problem is axios\")\r\n        return axios.get(\"/api/projects/\")\r\n    },\r\n    getProjectId: function(id){\r\n        return axios.get(`/api/projects/${id}`)\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction PortfolioCard (props) {\r\n    return (\r\n        <div class=\"container\">\r\n        <div class=\"row\">\r\n    <div class=\"col s12 m7\">\r\n      <div class=\"card\">\r\n        <div class=\"card-image\">\r\n          <img src={props.image} alt={props.alt}>\r\n          <span class=\"card-title\">{props.title}</span>\r\n          </img>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <p>{props.text}</p>\r\n        </div>\r\n        <div class=\"card-action\">\r\n          <a href={props.link}>View Project</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n \r\n    )\r\n}\r\n\r\nexport default PortfolioCard;","import React, { Component } from \"react\"\r\nimport API from \"../../utils/API\"\r\nimport PortfolioCard from \"../PortfolioCard\"\r\n\r\nclass Portfolio extends Component {\r\n    state = {\r\n        projects: []\r\n    }\r\n    componentDidMount() {\r\n        // API call to display all my projects\r\n        console.log(\"component loaded\")\r\n        API.getProject()\r\n            .then(res => {\r\n                console.log(\"whee\")\r\n                console.log(res.data)\r\n                this.setState({\r\n                    projects: res.data\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Heyooooo</h1>\r\n                {/* looping through my included projects */}\r\n                {this.state.projects.map(project => (\r\n                    <div data-aos=\"zoom-in-up\" data-aos-duration=\"1200\">\r\n                        <div>\r\n                            <PortfolioCard title={project.title}\r\n                                text={project.text}\r\n                                link={project.link}\r\n                                image={project.image}\r\n                                alt={project.alt}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\"\nimport About from \"./components/About\"\nimport Portfolio from \"./components/Portfolio\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <About/>\n      <div className=\"container\">\n      <Portfolio/> \n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}